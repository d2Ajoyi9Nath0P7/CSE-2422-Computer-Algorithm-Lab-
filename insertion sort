#include<bits/stdc++.h>
using namespace std;

void insertion_sort(vector<int>&vec)
{
    int i,j,item;
    int n = vec.size();
    for(int i = 1 ; i < n ; i++)
    {
        item = vec[i];
        j = i - 1;
        while(j >= 0 && vec[j] > item)
        {
            vec[j+1] = vec[j];
            j--;
        }
        vec[j+1] = item;
    }
}
int main()
{
    int n;
    cin>>n;
    vector<int>vec(n);
    for(int i = 0 ; i < n ; i++)
    {
        cin>>vec[i];
    }
    insertion_sort(vec);
    for(int i = 0 ; i < n ; i++)
    {
        cout<<vec[i]<<" ";
    }
}


/*
Time complexity : 

Case	  Time Complexity	Condition
Best	  O(n)	            Already sorted array
Average	  O(n²)	            Random order
Worst	  O(n²)	            Reverse sorted



Space Complexity : 

Case	  Space Complexity	   Condition
Best	  O(1)	               Already sorted array
Average	  O(1)	               Random order
Worst	  O(1)	               Reverse sorted


 
Processor : Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (1.80 GHz)
RAM : 8GB DDR4
Operating System : Windows 11 Pro 64 bit
*/
